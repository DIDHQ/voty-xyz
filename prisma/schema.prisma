// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Storage {
  permalink String

  data Json

  @@id([permalink])
}

model Community {
  id        String
  permalink String

  subscribers        Int      @default(0)
  grants             Int      @default(0)
  grantProposals     Int      @default(0)
  grantProposalVotes Int      @default(0)
  groupProposals     Int      @default(0)
  groupProposalVotes Int      @default(0)
  ts                 DateTime

  @@id([permalink])
  @@unique([id])
}

model Grant {
  permalink          String
  communityId        String
  communityPermalink String

  proposals    Int       @default(0)
  votes        Int       @default(0)
  ts           DateTime
  tsAnnouncing DateTime?
  tsProposing  DateTime?
  tsVoting     DateTime?

  @@id([permalink])
}

model GrantProposal {
  permalink      String
  grantPermalink String

  proposer String
  votes    Int      @default(0)
  selected String?
  ts       DateTime

  @@id([permalink])
  @@unique([grantPermalink, proposer])
}

model GrantProposalSelect {
  permalink         String
  grantPermalink    String
  proposalPermalink String

  selector String
  ts       DateTime

  @@id([permalink])
  @@unique([proposalPermalink])
}

model GrantProposalVote {
  permalink         String
  grantPermalink    String
  proposalPermalink String

  voter String
  ts    DateTime

  @@id([permalink])
  @@unique([grantPermalink, voter])
  @@index([proposalPermalink])
}

model GrantProposalVoteChoice {
  proposalPermalink String
  choice            String

  power Decimal

  @@id([proposalPermalink, choice])
}

model Group {
  id                 String
  permalink          String
  communityId        String
  communityPermalink String

  proposals Int      @default(0)
  votes     Int      @default(0)
  ts        DateTime

  @@id([permalink])
  @@unique([id, communityId])
}

model GroupProposal {
  permalink      String
  communityId    String
  groupId        String
  groupPermalink String

  proposer     String
  votes        Int       @default(0)
  ts           DateTime
  tsAnnouncing DateTime?
  tsVoting     DateTime?

  @@id([permalink])
  @@index([communityId, groupId])
}

model GroupProposalVote {
  permalink         String
  proposalPermalink String

  voter String
  ts    DateTime

  @@id([permalink])
  @@unique([proposalPermalink, voter])
}

model GroupProposalVoteChoice {
  proposalPermalink String
  choice            String

  power Decimal

  @@id([proposalPermalink, choice])
}

model Subscription {
  communityId String
  subscriber  String

  ts DateTime

  @@id([communityId, subscriber])
}

model Activity {
  communityId String
  type        String
  actor       String

  data Json

  ts DateTime

  @@id([ts, actor])
  @@index([communityId, ts, type])
}

model UploadBuffer {
  key String

  metadata Json
  type     String
  data     Bytes

  ts DateTime

  @@id([key])
}
